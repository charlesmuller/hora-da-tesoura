name: Deploy_Hora_da_Tesoura

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script_stop: true
          script: |
            set -e
            if [ ! -d "$HOME/hora-da-tesoura" ]; then
              git clone ${{ secrets.REPO_SSH_URL }} $HOME/hora-da-tesoura
            fi
            cd $HOME/hora-da-tesoura
            git fetch --all
            git checkout main
            git pull origin main

            # escreve .env.prod a partir de secrets
            echo "${{ secrets.ENV_PROD }}" > .env.prod

            docker-compose -f docker-compose.prod.yml up -d --build

            # injeta .env dentro do container
            docker exec hdt-app-prod bash -lc "\
              cat > /var/www/html/.env <<'EOF'
            $(cat .env.prod)
            EOF
            "
            # Instala dependências e prepara app (executa DENTRO do container app)
            docker exec hdt-app-prod bash -lc "\
              cd /var/www/html && \
              composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev && \
              chown -R www-data:www-data storage bootstrap/cache && \
              chmod -R 775 storage bootstrap/cache && \
              php artisan key:generate --force && \
              php artisan storage:link || true && \
              php artisan config:cache && php artisan route:cache && php artisan view:cache && \
              php artisan optimize:clear \
            "

            # Migrações (opcional; ative quando quiser)
            # docker exec hdt-app-prod bash -lc "php artisan migrate --force"